{"version":3,"file":"static/js/720.1958ccdb.chunk.js","mappings":"qNAEaA,EAAiBC,EAAAA,GAAAA,SAAe,kIAOzC,SAACC,GAAO,OACRA,IACAC,EAAAA,EAAAA,IAAG,qDAEF,I,SCVQC,EAAW,SAACC,GACvB,IAAQC,EAAgBD,EAAhBC,MAAOC,EAASF,EAATE,KAGTL,EAAUK,EAAKC,OAASD,EAAKE,QACnC,OACE,4BACE,SAACT,GAAc,kBAAKM,GAAK,IAAEJ,QAASA,KACnCA,IAAW,0BAAOK,EAAKC,UAG9B,C,2LCZaE,EAA0BT,EAAAA,GAAAA,KAAW,sBAErCU,EAAiCV,EAAAA,GAAAA,IAAU,sB,6BCuBlDW,GAAmBC,EAAAA,EAAAA,GAAU,CACjCC,KAAM,OADiBD,EAlBC,SAACR,GACzB,IAAQU,EAAiBV,EAAjBU,aAER,OACE,SAACL,EAAuB,CAACM,SAAUD,EAAa,UAC9C,UAACJ,EAA8B,YAC7B,SAACM,EAAA,EAAK,CACJC,UAAWd,EAAAA,EACXe,YAAY,4EACZC,KAAM,cACNC,SAAU,CAACC,EAAAA,OAEb,2FAIR,IAMaC,EAAc,SAAClB,GAC1B,IAAQW,EAAaX,EAAbW,SACR,OAAO,SAACJ,EAAgB,CAACI,SAAUA,GACrC,E,UC/BaQ,EAAuBvB,EAAAA,GAAAA,IAAU,gJAUjCwB,EAAkBxB,EAAAA,GAAAA,IAAU,oJAQ5ByB,EAAiBzB,EAAAA,GAAAA,IAAU,qHAQ3B0B,EAAwB1B,EAAAA,GAAAA,IAAU,yCAIlC2B,GAA0B3B,EAAAA,EAAAA,IAAO4B,EAAAA,GAAP5B,CAAY,oEAKtC6B,EAAgB7B,EAAAA,GAAAA,IAAU,yCCdnC8B,GAAwBC,EAAAA,EAAAA,ICXL,SAAC3B,GACtB,MAAsCA,EAAMA,MAAM4B,YAA1CC,EAAY,EAAZA,aAAcC,EAAW,EAAXA,YACdC,EAAkB/B,EAAlB+B,cAEFC,EAAehC,EAAMA,MAAMiC,SAASD,aAM1C,OACE,iCACIA,IAAgB,SAAC,KAAQ,CAACE,GAAG,YAC/B,UAACf,EAAoB,YACnB,SAACC,EAAe,UACbU,EAAYK,KAAI,SAACC,GAChB,OACE,SAACb,EAAuB,CAACW,GAAI,YAAcE,EAAKC,GAAG,SAChDD,EAAKrB,MADiDqB,EAAKC,GAIlE,OAGF,SAAChB,EAAc,UACZQ,EAAaM,KAAI,SAACC,GACjB,OAAO,SAACX,EAAa,UAAgBW,EAAKE,SAAfF,EAAKC,GAClC,OAGF,SAACf,EAAqB,WACpB,SAACJ,EAAW,CAACP,SAzBW,SAAC4B,GAC/BR,EAAcQ,EAASC,YACzB,WA4BF,IDvBA,GAAeC,EAAAA,EAAAA,KAnBO,SAACC,GACrB,MAAO,CACL1C,MAAO0C,EAEX,IAEyB,SAACC,GACxB,MAAO,CACLZ,cAAe,SAACa,GACdD,GAASE,EAAAA,EAAAA,GAAmBD,GAC9B,EACAE,UAAW,WACTH,GAASI,EAAAA,EAAAA,MACX,EAEJ,GAIA,CAGErB,E,gFE7BK,IAAMT,EAAgB,SAAC+B,GAC5B,IAAIA,EAEJ,MAAO,iFACT,EAEaC,EAAmB,SAACC,GAAS,OAAK,SAACF,GAC9C,OAAIA,EAAMG,OAASD,EACX,iHAAN,OAA8BA,EAAS,0DACpC,CACP,CAAE,C","sources":["components/common/FormsControl/StyledFormsControl.jsx","components/common/FormsControl/FormsControl.jsx","components/inner/Dialogs/MessageForm/StyledMessageForm.jsx","components/inner/Dialogs/MessageForm/MessageForm.jsx","components/inner/Dialogs/StyledDialogs.jsx","components/inner/Dialogs/DialogsContainer.jsx","components/inner/Dialogs/Dialogs.jsx","utils/validators.js"],"sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledTextarea = styled.textarea`\r\n  outline: none;\r\n  border-radius: 10px;\r\n  padding: 5px 5px;\r\n  width: 250px;\r\n  min-width: 0;\r\n\r\n  ${(isError) =>\r\n    isError &&\r\n    css`\r\n      border-color: red;\r\n    `}\r\n`;\r\n","import React from \"react\";\r\nimport { StyledTextarea } from \"./StyledFormsControl\";\r\n\r\nexport const TextArea = (props) => {\r\n  const { input, meta } = props;\r\n  //console.log(meta);\r\n\r\n  const isError = meta.error && meta.touched;\r\n  return (\r\n    <div>\r\n      <StyledTextarea {...input} isError={isError} />\r\n      {isError && <span>{meta.error}</span>}\r\n    </div>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledMessageCustomForm = styled.form``;\r\n\r\nexport const StyledMessageCustomFormWrapper = styled.div``;\r\n","import { Field, reduxForm } from \"redux-form\";\r\nimport React from \"react\";\r\nimport {\r\n  StyledMessageCustomForm,\r\n  StyledMessageCustomFormWrapper,\r\n} from \"./StyledMessageForm\";\r\nimport { requiredField } from \"utils/validators\";\r\nimport { TextArea } from \"components/common/FormsControl/FormsControl\";\r\n\r\nconst MessageCustomForm = (props) => {\r\n  const { handleSubmit } = props;\r\n\r\n  return (\r\n    <StyledMessageCustomForm onSubmit={handleSubmit}>\r\n      <StyledMessageCustomFormWrapper>\r\n        <Field\r\n          component={TextArea}\r\n          placeholder=\"Введите текст\"\r\n          name={\"messageText\"}\r\n          validate={[requiredField]}\r\n        />\r\n        <button>Отправить</button>\r\n      </StyledMessageCustomFormWrapper>\r\n    </StyledMessageCustomForm>\r\n  );\r\n};\r\n\r\nconst MessageReduxForm = reduxForm({\r\n  form: \"sss\",\r\n})(MessageCustomForm);\r\n\r\nexport const MessageForm = (props) => {\r\n  const { onSubmit } = props;\r\n  return <MessageReduxForm onSubmit={onSubmit} />;\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledDialogsWrapper = styled.div`\r\n  display: grid;\r\n  padding: 0px;\r\n\r\n  grid-template-columns: 2fr 10fr;\r\n  grid-template-areas:\r\n    \"d h\"\r\n    \"d s\";\r\n`;\r\n\r\nexport const StyledUsersList = styled.div`\r\n  background-color: rgba(216, 216, 216, 0.67);\r\n  grid-area: d;\r\n  gap: 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const StyledMessages = styled.div`\r\n  grid-area: h;\r\n  height: 100%;\r\n  gap: 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const StyledSendMessageForm = styled.div`\r\n  grid-area: s;\r\n`;\r\n\r\nexport const StyledUserProfileDialog = styled(Link)`\r\n  display: flex;\r\n  text-decoration: none;\r\n`;\r\n\r\nexport const StyledMessage = styled.div`\r\n  grid-area: h;\r\n`;\r\n","import { withAuthRedirect } from \"components/highOrder/withAuthRedirect\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAuthUserThunk } from \"redux/auth-reducer\";\r\n\r\nimport { addMessageToDialog } from \"redux/dialogs-reducer\";\r\nimport { Dialogs } from \"./Dialogs\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    props: state,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSendMessage: (text) => {\r\n      dispatch(addMessageToDialog(text));\r\n    },\r\n    authorize: () => {\r\n      dispatch(getAuthUserThunk());\r\n    },\r\n  };\r\n};\r\n\r\nlet AuthRedirectContainer = withAuthRedirect(Dialogs);\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AuthRedirectContainer);\r\n/* \r\n\r\n\r\n\r\n\r\n*/\r\n// old version\r\n/* export const DialogsContainer = (props) => {\r\n  const dispatch = props.dispatch;\r\n\r\n  const onSendMessage = (text) => {\r\n    dispatch(addMessageToDialog(text));\r\n  };\r\n\r\n  const onMessageChange = (text) => {\r\n    dispatch(updateMessageText(text));\r\n  };\r\n\r\n  return (\r\n    <Dialogs\r\n      onMessageChange={onMessageChange}\r\n      onSendMessage={onSendMessage}\r\n      props={props.state}\r\n    />\r\n  );\r\n}; */\r\n","import React from \"react\";\r\n\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { MessageForm } from \"./MessageForm/MessageForm\";\r\nimport {\r\n  StyledDialogsWrapper,\r\n  StyledMessage,\r\n  StyledMessages,\r\n  StyledSendMessageForm,\r\n  StyledUserProfileDialog,\r\n  StyledUsersList,\r\n} from \"./StyledDialogs\";\r\n\r\nexport const Dialogs = (props) => {\r\n  const { messagesData, dialogsData } = props.props.dialogsPage;\r\n  const { onSendMessage } = props;\r\n\r\n  const isAuthorized = props.props.authData.isAuthorized;\r\n\r\n  const sendMessageHandlerInner = (formData) => {\r\n    onSendMessage(formData.messageText);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!isAuthorized && <Navigate to=\"/login\" />}\r\n      <StyledDialogsWrapper>\r\n        <StyledUsersList>\r\n          {dialogsData.map((item) => {\r\n            return (\r\n              <StyledUserProfileDialog to={\"/dialogs/\" + item.id} key={item.id}>\r\n                {item.name}\r\n              </StyledUserProfileDialog>\r\n            );\r\n          })}\r\n        </StyledUsersList>\r\n\r\n        <StyledMessages>\r\n          {messagesData.map((item) => {\r\n            return <StyledMessage key={item.id}>{item.message}</StyledMessage>;\r\n          })}\r\n        </StyledMessages>\r\n\r\n        <StyledSendMessageForm>\r\n          <MessageForm onSubmit={sendMessageHandlerInner} />\r\n        </StyledSendMessageForm>\r\n      </StyledDialogsWrapper>\r\n    </>\r\n  );\r\n};\r\n","export const requiredField = (value) => {\r\n  if (value) return undefined;\r\n\r\n  return \"Заполните поле\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength)\r\n    return `Максимальная длинна ${maxLength} символов`;\r\n  else return undefined;\r\n};\r\n\r\nexport const minLength10 = (value) => {\r\n  if (value.length < 1) return `Максимальная длинна ${10} символов`;\r\n\r\n  return undefined;\r\n};\r\n\r\nexport const maxLength10 = (value) => {\r\n  if (value.length > 10) return `Максимальная длинна ${10} символов`;\r\n\r\n  return undefined;\r\n};\r\n"],"names":["StyledTextarea","styled","isError","css","TextArea","props","input","meta","error","touched","StyledMessageCustomForm","StyledMessageCustomFormWrapper","MessageReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","component","placeholder","name","validate","requiredField","MessageForm","StyledDialogsWrapper","StyledUsersList","StyledMessages","StyledSendMessageForm","StyledUserProfileDialog","Link","StyledMessage","AuthRedirectContainer","withAuthRedirect","dialogsPage","messagesData","dialogsData","onSendMessage","isAuthorized","authData","to","map","item","id","message","formData","messageText","connect","state","dispatch","text","addMessageToDialog","authorize","getAuthUserThunk","value","maxLengthCreator","maxLength","length"],"sourceRoot":""}